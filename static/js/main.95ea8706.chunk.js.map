{"version":3,"sources":["dispatcher.js","Constants.js","Stores/AuthStore.js","Utils/Api.js","Actions/AuthActions.js","Components/Auth/Signin.js","Components/Auth/Signup.js","Actions/CourseActions.js","Stores/CourseStore.js","Components/Course/Course.js","Components/Template/NavAdmin.js","Components/Template/Navbar.js","Components/Home.js","Actions/UserActions.js","Stores/UserStore.js","Components/Admin/User.js","Actions/ClassActions.js","Components/Admin/AddClass.js","Stores/ClassStore.js","Components/Admin/Classes.js","Components/Admin/UserList.js","Components/Admin/ClassDetails.js","Components/AdminHome.js","Actions/InstructorActions.js","Components/Instructor/InstructorClasses.js","Stores/ExamStore.js","Actions/ExamActions.js","Components/Instructor/ClassExams.js","Components/Instructor/AddExam.js","Components/Instructor/InstructorClass.js","Components/Instructor/InstructorExam.js","Components/Instructor/InstructorHome.js","Actions/StudentActions.js","Components/Student/StudentClasses.js","Components/Student/StudentClassExams.js","Components/Student/StudentClass.js","Components/Student/StudentResult.js","Components/Student/OmrSheet.js","Components/Student/StudentExam.js","Components/Student/StudentHome.js","App.js","serviceWorker.js","index.js"],"names":["dispatcher","Dispatcher","Constants","_userid","_user","_roles","Stores_AuthStore","AuthStore","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","register","_registerToActions","bind","assertThisInitialized","action","actionType","ActionTypes","_setUserid","payload","_setUser","_setRoles","role","_this2","setTimeout","emit","userid","self","localStorage","setItem","getItem","user","callback","on","removeListener","EventEmitter","Api","domain","fetch","login","email","password","concat","method","body","JSON","stringify","then","res","Promise","resolve","firstname","lastname","getToken","idToken","removeItem","id","coursename","createrid","isadmin","classname","createdby","starttime","stoptime","courseid","classid","date","answerkey","name","answers","url","options","headers","Accept","Content-Type","_getUserid","loggedIn","objectSpread","_checkStatus","response","json","status","console","log","alert","statusText","api","Actions_AuthActions","value","dispatch","fname","lname","signup","getUser","getRoles","Signin","props","state","handleEmailChange","handlePasswordChange","handleLogin","_onSignInReceived","addSigninListener","removeSigninListener","userId","history","replace","e","setState","target","preventDefault","AuthActions","signin","react_default","a","createElement","className","style","paddingTop","borderColor","borderRadius","padding","class","for","type","aria-describedby","placeholder","onChange","onClick","href","Component","Signup","handleFnameChange","handleLnameChange","handleSignup","Actions_CourseActions","getCourses","getCourse","addCourse","updateCourse","deleteCourse","_courses","_course","Stores_CourseStore","CourseStore","_setCourses","_addCourse","_deleteCourse","_setCourse","_updateCourse","courses","course","_this3","CourseActions","fetchCourses","Courses","newcourse","edit","idCourse","createdBy","_onCoursesChanged","_onCourseDelete","handleNameChange","_onEditPressed","editCourseChange","addCoursesChangeListner","removeCoursesChangeListner","_getCourses","c","ret","map","scope","color","backgroundColor","height","NavAdmin","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","page","split","NavAdmin_NavAdmin","aria-haspopup","aria-labelledby","onSignOut","Home","firstName","lastName","idUser","isAdmin","isStudent","isInstructor","_onProfileChanged","signout","onRolesChanged","addProfileChangeListener","addRoleListener","getRole","removeProfileChangeListener","removeRoleListener","_getUser","clear","window","location","roles","tab","width","paddingBottom","fontSize","Template_Navbar","Actions_UserActions","getUsers","updateUser","deleteUser","actionTypes","_users","Stores_UserStore","UserStore","_setUsers","UserActions","fetchUsers","users","User","selectedUser","onUsersChange","handleChangeAdmin","handleDeleteUser","onUsersChangedListener","removeUsersChangedListener","u","Actions_ClassActions","getClasses","addClass","startdate","enddate","getClass","getClassStudents","getClassInstructors","uid","cid","addStudentToClass","addInstructorToClass","removeStudentFromClass","removeInstructorFromClass","getExamsInClass","createExam","AddClass","Date","onCoursesChanged","onClassNameChanged","onClassStartChanged","onClassEndChanged","onCourseIdChanged","handleSubmit","_class","ClassActions","courseList","_classes","_classStudents","_classInstructors","Stores_ClassStore","ClassStore","_setClasses","fetchClasses","_setClass","_setClassStudents","_setClassInstructors","classes","ezxmclass","_this4","_this5","_this6","Classes","onClassesChanged","addClassesChangedListner","removeClassesChangedListener","_getClasses","class_id","endtime","studentcount","instructorcount","AddClass_AddClass","UserList","userView","title","operation","ClassDetails","allusers","instructors","Students","onClassChanged","onUsersChanged","onClassUsersChanged","onAddStudent","onAddInstructor","onRemoveStudent","onRemoveInstructor","addClassChangeListner","addClassUserChangeListner","match","params","removeClassUserChangeListner","removeClassChangeListener","getClassInstructorss","classStudents","classInst","getClassIns","length","addClassStudent","addClassIns","deleteClassStudent","deleteClassIns","formStyle","loading","filter","us","includes","disabled","UserList_UserList","AdminHome","react_router_dom","react_router","exact","path","component","Actions_InstructorActions","getClassesForInstructor","InstructorClasses","InstructorActions","fetchInstructorClasses","idClass","_exams","_exam","Stores_ExamStore","ExamStore","_setExams","_setExam","exams","exam","Actions_ExamActions","getExam","deleteExam","examid","updateAnswerKey","getStudentExam","ClassExams","onExamsChanged","addExamsChangeListerner","fetchExams","removeExamsChangeListener","getExams","ExamActions","idExam","exam_name","f","handleDelete","AddExam","handleDateChange","handleAnswerKeyChange","onExamAdded","addExamsAddListerner","removeExamsAddListener","InstructorClass","onClassChange","onClassUsersChange","onAdd","margin","ClassExams_ClassExams","AddExam_AddExam","InstructorExam","students","onExamReceived","onAnswerKeyUpdated","handleAnswerChange","addExamChangeListner","addExamUpdateListener","removeExamChangeListner","removeExamUpdatedListner","studentanswers","i","mark","x","s","StudentFirstName","StudentLastName","marks","InstructorHome","StudentActions","getClassesForStudent","submitAnswer","StudentClasses","fetchStudentClasses","StudentClassExams","StudentClass","StudentClassExams_StudentClassExams","StudentResult","OmrSheet","numberOfQuestion","started","start","submit","ans","push","A","B","C","D","st","onSubmit","join","rows","row","checked","handleCheckA","handleCheckB","handleCheckC","handleCheckD","StudentExam","handleAnswerSubmit","Student","submitExamAnswers","toLowerCase","StudentResult_StudentResult","OmrSheet_OmrSheet","StudentHome","App","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95ea8706.chunk.js","sourcesContent":["import { Dispatcher } from 'flux';\n \nexport default new Dispatcher();","export default {\n    ACCOUNT_SIGN_IN:   'ACCOUNT_SIGN_IN',\n    ACCOUNT_SIGN_OUT:  'ACCOUNT_SIGN_OUT',\n    ACCOUNT_CREATED:      'ACCOUNT_CREATED',\n    GET_USER:           'GET_USER',\n    ROLES_RECEIVED:     'ROLES_RECEIVED',\n    \n    COURSES_FETCHED: 'COURSES_FETCHED',\n    COURSE_FETCHED: 'COURSES_FETCHED',\n    COURSE_UPDATED: 'COURSE_UPDATED',\n    COURSE_DELETED: 'COURSE_UPDATED',\n    COURSE_ADDED: 'COURSE_UPDATED',\n\n    USERS_FETCHED: 'USERS_FETCHED',\n    USER_UPDATED: 'USER_UPDATED',\n    USER_DELETED: 'USER_DELETED',\n\n    CLASSES_FETCHED: 'CLASSES_FETCHED',\n    CLASS_CREATED: 'CLASS_CREATED',\n    CLASS_FETCHED: 'CLASS_FETCHED',\n    CLASS_STUDENTS_FETCHED: 'CLASS_STUDENTS_FETCHED',\n    CLASS_INS_FETCHED: 'CLASS_INS_FETCHED',\n    CLASS_STUDENT_ADDED: 'CLASS_STUDENT_ADDED',\n    CLASS_INS_ADDED:'CLASS_INS_ADDED',\n    CLASS_STUDENT_REMOVED:'CLASS_STUDENT_REMOVED',\n    CLASS_INS_REMOVED:'CLASS_INS_REMOVED',\n\n\n    EXAMS_FETCHED:'EXAMS_FETCHED',\n    EXAM_CREATED:'EXAM_CREATED',\n    EXAMS_DELETED:'EXAMS_DELETED',\n    EXAM_FETCHED: 'EXAM_FETCHED',\n    EXAM_UPDATED: 'EXAM_UPDATED',\n}","import { EventEmitter } from 'events';\nimport Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\n\nconst CHANGE = 'CHANGE';\nconst PROFILE_CHANGE = 'PROFILE_CHANGE';\nconst ROLES_CHANGED = 'ROLES_CHANGED';\nlet _userid = -1;\nlet _user = null;\nlet _roles = {};\n\nclass AuthStore extends EventEmitter {\n    constructor() {\n        super();\n         Dispatcher.register(this._registerToActions.bind(this));\n    }\n\n    // Switches over the action's type when an action is dispatched.\n    _registerToActions(action) {\n\n        switch(action.actionType) {\n            \n            case ActionTypes.ACCOUNT_SIGN_IN:\n                this._setUserid(action.payload);\n                break;\n            case ActionTypes.ACCOUNT_CREATED:\n                this._setUserid(action.payload);\n            case ActionTypes.GET_USER:\n                this._setUser(action.payload);\n                break;\n            case ActionTypes.ROLES_RECEIVED:\n                this._setRoles(action.payload);\n                break;\n            default:\n            break;\n        }\n    }\n    _setRoles(role){\n        _roles = role;\n        setTimeout(() => { // Run after dispatcher has finished\n            this.emit(ROLES_CHANGED);\n        }, 0);\n\n    }\n\n    getRoles(){\n        return _roles;\n    }\n\n    _setUserid(userid){\n        if(userid){\n            let self = this;\n            _userid = userid;\n            localStorage.setItem('userid',_userid.userid);\n            setTimeout(() => { // Run after dispatcher has finished\n                self.emit(CHANGE);\n            }, 0);\n        }\n    }\n\n    _getUserid(){\n        if(localStorage.getItem('userid')){\n            return localStorage.getItem('userid');\n        }\n    }\n\n    _setUser(user){\n        \n        if(user){\n            let self = this;\n            _user = user;\n            setTimeout(() => { // Run after dispatcher has finished\n                self.emit(PROFILE_CHANGE);\n            }, 0);\n        }\n    }\n\n    _getUser(){\n        return _user;\n    }\n\n\n    addSigninListener(callback){\n        this.on(CHANGE,callback);\n    }\n\n    removeSigninListener(callback){\n        this.removeListener(CHANGE,callback);\n    }\n\n    addProfileChangeListener(callback){\n        this.on(PROFILE_CHANGE,callback);\n    }\n\n    removeProfileChangeListener(callback){\n        this.removeListener(PROFILE_CHANGE,callback);\n    }\n\n    addRoleListener(callback){\n        this.on(ROLES_CHANGED,callback);\n    }\n\n    removeRoleListener(callback){\n        this.removeListener(ROLES_CHANGED,callback);\n    }\n}\nexport default new AuthStore();","import AuthStore from \"../Stores/AuthStore\";\n\nexport default class Api {\n    // Initializing important variables\n    constructor(domain) {\n        // 192.168.0.14:3000\n        this.domain = domain || 'http://ec2-18-223-155-37.us-east-2.compute.amazonaws.com:3000/api/' // API server domain\n        this.fetch = this.fetch.bind(this) // React binding stuff\n        this.login = this.login.bind(this)\n        // this.getProfile = this.getProfile.bind(this)\n    }\n\n    login(email, password) {\n        // Get a token from api server using the fetch api\n        return this.fetch(`${this.domain}signin/`, {\n            method: 'POST',\n            body: JSON.stringify({\n                email,\n                password\n            })\n        }).then(res => {\n            // this.setToken(res.userid) // Setting the token in localStorage            \n            return Promise.resolve(res);\n        })\n    }\n\n    signup(email,password,firstname,lastname){\n        return this.fetch(`${this.domain}signup/`,{\n            method: 'POST',\n            body: JSON.stringify({\n                email,\n                password,\n                firstname,\n                lastname\n            })\n        }).then(res => {\n            return Promise.resolve(res);\n        });\n    }\n    getRoles(){\n        return this.fetch(`${this.domain}roles/`,{\n            method: 'GET',\n        }).then(res => {\n            return Promise.resolve(res);\n        });\n    }\n\n    getUser(userid){\n        return this.fetch(`${this.domain}user/${userid}`,{\n            method: 'GET',\n        }).then(res => {\n            return Promise.resolve(res);\n        });\n    }\n\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken() // GEtting token from localstorage\n        return !!token // handwaiving here\n    }\n\n    setToken(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken)\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token')\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    }\n\n    getCourses(){\n        return this.fetch(`${this.domain}course/`,{\n            method: 'GET',\n        }).then(res => {\n            return Promise.resolve(res);\n        });\n    }\n\n    getCourse(id){\n        return this.fetch(`${this.domain}course/${id}`,{\n            method: 'GET',\n        }).then(res => {\n            return Promise.resolve(res);\n        });\n    }\n\n    updateCourse(id,coursename){\n        return this.fetch(`${this.domain}course/${id}`,{\n            method: 'PUT',\n            body: JSON.stringify({\n                coursename,\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    addCourse(createrid,coursename){\n        return this.fetch(`${this.domain}course/`,{\n            method: 'POST',\n            body: JSON.stringify({\n                createrid,\n                coursename\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    deleteCourse(id){\n        return this.fetch(`${this.domain}course/${id}`,{\n            method: 'DELETE',\n        }).then(res => Promise.resolve(res));\n    }\n\n    getUsers(){\n        return this.fetch(`${this.domain}users/`,{\n            method:'GET',\n        }).then(res => Promise.resolve(res));\n    }\n\n    updateUser(id,firstname,lastname,isadmin){\n        return this.fetch(`${this.domain}user/${id}`,{\n            method: 'PUT',\n            body: JSON.stringify({\n                firstname,\n                lastname,\n                isadmin,\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    deleteUser(id){\n        return this.fetch(`${this.domain}user/${id}`,{\n            method: 'DELETE',\n        }).then(res => Promise.resolve(res));\n    }\n\n    addClass(classname,createdby,starttime,stoptime,courseid){\n        return this.fetch(`${this.domain}class/`,{\n            method:'POST',\n            body:JSON.stringify({\n                classname,\n                createdby,\n                courseid,\n                starttime,\n                stoptime,\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    getClasses(){\n        return this.fetch(`${this.domain}class/`,{\n            method:'GET',\n        }).then(res => Promise.resolve(res));\n    }\n\n    getClass(id){\n        return this.fetch(`${this.domain}class/${id}`,{\n            method:'GET',\n        }).then(res => Promise.resolve(res));\n    }\n\n    getClassInstructors(id){\n        return this.fetch(`${this.domain}class/${id}/instructors`,{\n            method:'GET'\n        }).then(res => Promise.resolve(res));\n    }\n\n    getClassStudents(id){\n        return this.fetch(`${this.domain}class/${id}/students`,{\n            method:'GET'\n        }).then(res => Promise.resolve(res));\n    }\n\n    addStudentToClass(userid,classid){\n        return this.fetch(`${this.domain}class/student`,{\n            method:'POST',\n            body: JSON.stringify({\n                userid,\n                classid\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    addInstructorToClass(userid,classid){\n        return this.fetch(`${this.domain}class/instructor`,{\n            method:'POST',\n            body: JSON.stringify({\n                userid,\n                classid\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    removeStudentFromClass(userid,classid){\n        return this.fetch(`${this.domain}class/student`,{\n            method:'DELETE',\n            body: JSON.stringify({\n                userid,\n                classid\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    removeInstructorFromClass(userid,classid){\n        return this.fetch(`${this.domain}class/instructor`,{\n            method:'DELETE',\n            body: JSON.stringify({\n                userid,\n                classid\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    getClassesForInstructor(){\n        return this.fetch(`${this.domain}instructor/class`,{\n            method:\"GET\",\n        }).then(res => Promise.resolve(res));\n    }\n\n    getClassesForStudent(){\n        return this.fetch(`${this.domain}student/class`,{\n            method:\"GET\",\n        }).then(res => Promise.resolve(res));\n    }\n\n    getExamsInClass(id){\n        return this.fetch(`${this.domain}class/${id}/exam`,{\n            method:\"GET\",\n        }).then(res => Promise.resolve(res));\n    }\n\n    createExam(id,date,answerkey,name){\n        return this.fetch(`${this.domain}class/${id}/exam`,{\n            method:\"POST\",\n            body:JSON.stringify({\n                date,\n                answerkey,\n                name\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    getExam(id){\n        return this.fetch(`${this.domain}exam/${id}`,{\n            method:\"GET\",\n        }).then(res => Promise.resolve(res));\n    }\n\n    deleteExam(id){\n        return this.fetch(`${this.domain}exam/${id}`,{\n            method:\"DELETE\",\n        }).then(res => Promise.resolve(res));\n    }\n\n    updateAnswerKey(id,answerkey){\n        return this.fetch(`${this.domain}exam/${id}`,{\n            method:'PUT',\n            body: JSON.stringify({\n                answerkey\n            })\n        }).then(res => Promise.resolve(res));\n    }\n\n    getStudentExam(id){\n        return this.fetch(`${this.domain}student/exam/${id}`,{\n            method:\"GET\",\n        }).then(res => Promise.resolve(res));\n    }\n\n    submitAnswer(id,answers){\n        return this.fetch(`${this.domain}student/exam/${id}`,{\n            method:\"POST\",\n            body:JSON.stringify({\n                answers\n            })\n        }).then(res => Promise.resolve(res))\n    }\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'userid': AuthStore._getUserid(),\n        }\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Token ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        }) .then(this._checkStatus)\n        .then(response => response.json())\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            console.log(response);\n            alert(response.statusText);\n            throw JSON.stringify({});\n            \n        }\n    }\n\n   \n}\n","import Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport Api from '../Utils/Api';\n\nconst api = new Api();\n\nclass AuthActions{\n    signin(email,password){\n        api.login(email,password).then(value => {\n          Dispatcher.dispatch({\n              actionType: ActionTypes.ACCOUNT_SIGN_IN,\n              payload:    value,\n          });\n        });\n    }\n\n    signup(fname,lname,email,password){\n        api.signup(email,password,fname,lname).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.ACCOUNT_CREATED,\n                payload: value,\n            })\n        })\n    }\n\n    getUser(userid){\n        api.getUser(userid).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.GET_USER,\n                payload: value,\n            })\n        })\n    }\n\n    getRole(){\n        api.getRoles().then(value => {\n            Dispatcher.dispatch({\n                actionType:ActionTypes.ROLES_RECEIVED,\n                payload: value,\n            })\n        })\n    }\n}\n\nexport default new AuthActions();","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\n\n\n\n\nclass Signin extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            email:'',\n            password:'',\n        }\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this._onSignInReceived = this._onSignInReceived.bind(this);\n    }\n\n    componentWillMount(){\n        AuthStore.addSigninListener(this._onSignInReceived);\n    }\n\n    componentWillUnmount(){\n        AuthStore.removeSigninListener(this._onSignInReceived);\n    }\n    _onSignInReceived(){\n        let userId = AuthStore._getUserid();\n        console.log(userId);\n        this.props.history.replace(\"./\");            \n    }\n\n    handleEmailChange(e){\n        this.setState({\n            email:e.target.value,\n        })\n    }\n    handlePasswordChange(e){\n        this.setState({\n            password:e.target.value,   \n        })\n    }\n\n\n    handleLogin(e){\n        e.preventDefault();\n\n        AuthActions.signin(this.state.email,this.state.password);\n    }\n\n    render(){\n        var styles1 = {\n           \n            // border: 'solid 1px',\n            borderColor: '#999',\n            borderRadius:'5px',\n            padding: '20px',\n          };\n\n        var styleContainer = {\n            paddingTop:'150px',\n        }\n        return(\n            <div className=\"container\" style={styleContainer}>\n                    <h3>Easy Exam Login</h3>\n                <div className=\"col col-md-6 offset-md-3\" style={styles1}>\n                    <form>\n                        <div class=\"form-group\">\n                            <label for=\"email\">Email address</label>\n                            <input type=\"email\" class=\"form-control\" id=\"email\" value={this.state.email} aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\n                                    onChange={this.handleEmailChange}/>\n                            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"password\">Password</label>\n                            <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\"\n                                    onChange={this.handlePasswordChange}\n                                    value={this.state.password}/>\n                        </div>\n                    \n                        <button type=\"submit\" class=\"btn btn-primary\" onClick={this.handleLogin}>Submit</button>\n                    </form>\n                    \n                </div>\n                <br/>\n                <a href=\"/signup\">\n                        Create Account\n                    </a>\n                \n            </div>\n        )\n    }\n}\n\nexport default Signin;","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\n\n\n\n\nclass Signup extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            email:'',\n            password:'',\n            fname:'',\n            lname:'',\n        }\n        this.handleFnameChange = this.handleFnameChange.bind(this);\n        this.handleLnameChange = this.handleLnameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleSignup = this.handleSignup.bind(this);\n        this._onSignInReceived = this._onSignInReceived.bind(this);\n    }\n\n    componentWillMount(){\n        AuthStore.addSigninListener(this._onSignInReceived);\n    }\n\n    componentWillUnmount(){\n        AuthStore.removeSigninListener(this._onSignInReceived);\n    }\n    _onSignInReceived(){\n        let userId = AuthStore._getUserid();\n        console.log(userId);\n        this.props.history.replace(\"./\");            \n    }\n\n    handleFnameChange(e){\n        this.setState({\n            fname:e.target.value,\n        })\n    }\n\n    handleLnameChange(e){\n        this.setState({\n            lname:e.target.value,\n        })\n    }\n\n    handleEmailChange(e){\n        this.setState({\n            email:e.target.value,\n        })\n    }\n    handlePasswordChange(e){\n        this.setState({\n            password:e.target.value,   \n        })\n    }\n\n\n    handleSignup(e){\n        e.preventDefault();\n        AuthActions.signup(this.state.fname,\n                            this.state.lname,\n                            this.state.email,\n                            this.state.password);\n        // AuthActions.signup(this.state.,this.state.password);\n    }\n\n    render(){\n        var styles1 = {\n           \n            // border: 'solid 1px',\n            borderColor: '#999',\n            borderRadius:'5px',\n            padding: '20px',\n          };\n\n        var styleContainer = {\n            paddingTop:'150px',\n        }\n        return(\n            <div className=\"container\" style={styleContainer}>\n                    <h3>Easy Exam Sign up</h3>\n                <div className=\"col col-md-8 offset-md-2\" style={styles1}>\n                    <form>\n                        <div class=\"row form-group\">\n                            <div className=\"col\">\n                                <label for=\"fname\">First name</label>\n                                <input type=\"text\" class=\"form-control\" id=\"fname\" value={this.state.fname} placeholder=\"Enter first name\"\n                                        onChange={this.handleFnameChange}/>\n                            </div>\n                            <div className=\"col\">\n                                <label for=\"lname\">Last name</label>\n                                <input type=\"text\" class=\"form-control\" id=\"lname\" value={this.state.lname} placeholder=\"Enter last name\"\n                                        onChange={this.handleLnameChange}/>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"email\">Email address</label>\n                            <input type=\"email\" class=\"form-control\" id=\"email\" value={this.state.email} aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\n                                    onChange={this.handleEmailChange}/>\n                            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"password\">Password</label>\n                            <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\"\n                                    onChange={this.handlePasswordChange}\n                                    value={this.state.password}/>\n                        </div>\n                    \n                        <button type=\"submit\" class=\"btn btn-primary\" onClick={this.handleSignup}>Create Account</button>\n                    </form>\n                </div>\n                <br/>\n                <a href=\"/signin\">\n                    Already have an account? Signin.\n                </a>\n            </div>\n        )\n    }\n}\n\nexport default Signup;","import Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport Api from '../Utils/Api';\n\nconst api = new Api();\n\nclass CourseActions{\n    fetchCourses(){\n        api.getCourses().then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.COURSES_FETCHED,\n                payload:    value,\n            });\n          });\n    }\n\n    fetchCourse(id){\n        api.getCourse(id).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.COURSE_FETCHED,\n                payload:    value,\n                })\n            })\n    }\n\n    addCourse(userid,name){\n        api.addCourse(userid,name).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.COURSE_ADDED,\n                payload:    value,\n                })\n            })\n    }\n\n    updateCourse(id,name){\n        api.updateCourse(id,name).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.COURSE_UPDATED,\n                payload:    value,\n                })\n            })\n    }\n\n    deleteCourse(id){\n        api.deleteCourse(id).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.COURSE_DELETED,\n                payload:    value,\n                })\n            })\n    }\n}\nexport default new CourseActions();","import { EventEmitter } from 'events';\nimport Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport CourseActions from '../Actions/CourseActions';\n\nconst COURSE_CHANGE = 'COURSE_CHANGE';\nconst COURSES_CHANGE = 'COURSES_CHANGE';\nconst COURSE_ADDED = 'COURSE_ADDED';\nconst COURSES_DELETED = 'COURSES_DELETED';\n\nlet _courses = [];\nlet _course = null;\n\nclass CourseStore extends EventEmitter {\n    constructor() {\n        super();\n         Dispatcher.register(this._registerToActions.bind(this));\n    }\n\n    // Switches over the action's type when an action is dispatched.\n    _registerToActions(action) {\n        switch(action.actionType) {\n            case ActionTypes.COURSES_FETCHED:\n                this._setCourses(action.payload);\n                break;\n            case ActionTypes.COURSE_ADDED:\n                this._addCourse(action.payload);\n                break;\n            case ActionTypes.COURSE_DELETED:\n                this._deleteCourse(action.payload);\n                break;\n            case ActionTypes.COURSE_FETCHED:\n                this._setCourse(action.payload);\n                break;\n            case ActionTypes.COURSE_UPDATED:\n                this._updateCourse(action.payload);\n                break;\n        }\n    }\n\n    _setCourses(courses){\n        if(courses){\n            _courses=courses;\n            setTimeout(() => { // Run after dispatcher has finished\n                this.emit(COURSES_CHANGE);\n            }, 0);\n        }\n    }\n\n    _getCourses(){\n        return _courses;\n    }\n\n    _setCourse(course){\n        if(course){\n            _course=course;\n            setTimeout(() => { // Run after dispatcher has finished\n                this.emit(COURSE_CHANGE);\n            }, 0);\n        }\n    }\n\n    _getCourse(){\n        return _course;\n    }\n\n\n    _addCourse(course){\n        if(course){\n            CourseActions.fetchCourses();\n        }\n    }\n\n    _deleteCourse(course){\n        if(course){\n            CourseActions.fetchCourses();\n        }\n    }\n\n    _updateCourse(course){\n        if(course){\n            this._setCourse(course);\n        }\n    }\n\n    addCoursesChangeListner(callback){\n        this.on(COURSES_CHANGE,callback);\n    }\n\n    removeCoursesChangeListner(callback){\n        this.removeListener(COURSES_CHANGE,callback);\n    }\n\n    addCourseChangeListner(callback){\n        this.on(COURSE_CHANGE,callback);\n    }\n\n    removeCouseChangeListner(callback){\n        this.removeListener(COURSES_CHANGE,callback);\n    }\n}\nexport default new CourseStore();","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport CourseStore from '../../Stores/CourseStore';\nimport CourseActions from '../../Actions/CourseActions';\n\n\n\n\nclass Courses extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n           courses:[],\n           newcourse:{\n               name:''\n           },\n           edit:{\n               idCourse:-1,\n               name:'',\n               createdBy:-1,\n           },\n        }\n\n        this._onCoursesChanged = this._onCoursesChanged.bind(this);\n        this._onCourseDelete = this._onCourseDelete.bind(this);\n        this.addCourse = this.addCourse.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this._onEditPressed = this._onEditPressed.bind(this);\n        this.editCourseChange = this.editCourseChange.bind(this);\n    }\n\n    componentWillMount(){\n        CourseStore.addCoursesChangeListner(this._onCoursesChanged);\n        CourseActions.fetchCourses();\n    }\n\n    componentWillUnmount(){\n        CourseStore.removeCoursesChangeListner(this._onCoursesChanged);\n    }\n\n    _onCoursesChanged(){\n        this.setState({\n            courses: CourseStore._getCourses(),\n        })\n    }\n\n    _onCourseDelete(id){\n        CourseActions.deleteCourse(id);        \n    }\n\n    handleNameChange(e){\n        this.setState({\n            newcourse:{\n                name: e.target.value,\n            }\n        })\n    }\n\n    _onEditPressed(c){\n        if(this.state.edit.idCourse==c.idCourse){\n            CourseActions.updateCourse(this.state.edit.idCourse,this.state.edit.name);\n            this.setState({\n                edit:{\n                    idCourse:-1,\n                    name:'',\n                    createdBy:-1,\n                },\n            });\n        }\n        else{\n            this.setState({\n                edit: c\n            })\n        }\n    }\n\n    editCourseChange(e){\n        this.setState({\n            edit:{\n                idCourse: this.state.edit.idCourse,\n                name:e.target.value,\n                createdBy: this.state.edit.createdBy,\n            }\n        })\n    }\n\n    addCourse(){\n        if(this.state.newcourse.name!=''){\n            CourseActions.addCourse(AuthStore._getUserid(),this.state.newcourse.name);\n        }else{\n            alert(\"Enter valid course name\");\n        }\n    }\n    render(){\n        let formStyle=({\n            backgroundColor:\"#eee\",\n            padding:\"20px\",\n            borderRadius:\"20px\",\n        })\n\n        const ret = this.state.courses.map(c => {\n           return(\n            <tr>\n                <th scope=\"row\">{c.idCourse}</th>\n                <td>\n                    {this.state.edit.idCourse!=c.idCourse ? c.name : \n                        <input type=\"text\" value={this.state.edit.name} onChange={this.editCourseChange}/>\n                    }\n                </td>\n                <td>{c.createdBy}</td>\n                <td><button className=\"btn btn-primary\" onClick={() => this._onEditPressed(c)}>{this.state.edit.idCourse==c.idCourse?'Save':'Edit'}</button></td>\n                <td><button className=\"btn btn-danger\" onClick={() => this._onCourseDelete(c.idCourse)}> DELETE </button></td>\n            </tr>\n           )\n        })\n        return(\n            <div>\n                <h3>Courses</h3>\n\n                <table class=\"table\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">id</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">CreatedBy</th>\n                    <th scope=\"col\">Edit?</th>\n                    <th scope=\"col\">Delete?</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {ret}\n                </tbody>\n                </table>\n\n                <hr\n                style={{\n                        color: 'black',\n                        backgroundColor: '#aaa',\n                        height: '2px',\n                        borderRadius: '2px',\n                    }}\n                />                \n                <form style={formStyle}>\n                <h2 for=\"name\">Add Course</h2>\n\n                    <div class=\"row form-group\">\n                        <div className=\"col\">\n                            <input type=\"text\" class=\"form-control\" id=\"cname\" value={this.state.newcourse.name} placeholder=\"Enter Course name\"\n                                    onChange={this.handleNameChange}/>\n                        </div>\n                    </div>\n                    <button className=\"btn btn-primary\" onClick={this.addCourse}>Create Course</button>\n\n\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default Courses;","import React, { Component } from 'react';\n\nexport default class NavAdmin extends Component{\n\n    render(){   \n         return(\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                <li className=\"nav-item \">\n                        <a className=\"nav-link\" href=\"/admin/user/\">User <span className=\"sr-only\">(current)</span></a>\n                    </li> \n                    \n                    <li className='nav-item'>\n                        <a className='nav-link' href='/admin/course/'>Courses</a>\n                    </li>\n\n                    <li class='nav-item'>\n                        <a className='nav-link' href='/admin/class/'>Class</a>\n                    </li>\n            </ul>\n         )\n    }\n\n};","import React, { Component } from 'react';\nimport NavAdmin from './NavAdmin';\n\n\n\n\nclass Navbar extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n           \n        }\n\n    }\n\n    render(){\n        \n        return (\n\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n                    <a class=\"navbar-brand\" href=\"/\">Easy Exam </a>| {this.props.page.split(\" \")[0]}\n                    <div>{this.props.page===\"Admin home\"?<NavAdmin/>:''}</div>\n                    \n\n                    <span class=\"nav-item dropdown ml-auto\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {this.props.name}\n                        </a>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                            <a onClick={this.props.onSignOut} class=\"dropdown-item\" href=\"#\">Sign Out</a>\n                        </div>\n                        \n                    </span>\n                </div>\n                </nav>\n\n        )\n    }\n\n};\n\nexport default Navbar;","import React, { Component } from 'react';\nimport AuthActions from '../Actions/AuthActions';\nimport AuthStore from '../Stores/AuthStore';\nimport Courses from './Course/Course';\nimport Navbar from './Template/Navbar';\n\n\n\n\nclass Home extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n           user: {\n               firstName: \"\",\n               lastName: \"\",\n               idUser: -1,\n           },\n           role:{\n               isAdmin:false,\n               isStudent:false,\n               isInstructor:false,\n           }\n        }\n        this._onProfileChanged = this._onProfileChanged.bind(this);\n        this.signout = this.signout.bind(this);\n\n        this.onRolesChanged = this.onRolesChanged.bind(this);\n    }\n\n    componentWillMount(){\n        if(!localStorage.getItem(\"userid\")){\n            this.props.history.replace(\"./signin\");            \n        }\n        else{\n            AuthStore.addProfileChangeListener(this._onProfileChanged);\n            AuthStore.addRoleListener(this.onRolesChanged);\n            // console.log(AuthStore._getUserid().userid);\n            AuthActions.getUser(AuthStore._getUserid());\n            AuthActions.getRole();\n        }\n    }\n\n    componentWillUnmount(){\n        AuthStore.removeProfileChangeListener(this._onProfileChanged);\n        AuthStore.removeRoleListener(this.onRolesChanged);\n    }\n    \n    _onProfileChanged(){\n        var _user = AuthStore._getUser();\n        this.setState({\n            user: _user,\n        })\n    }\n\n    signout(){\n        localStorage.clear();\n        window.location.href = \"/\";\n   \n    }\n\n    onRolesChanged(){\n        let roles = AuthStore.getRoles();\n        console.log(roles);\n        \n        this.setState({\n            role:roles,\n        })\n    }\n\n    render(){\n        var styles1 = {\n           \n            // border: 'solid 1px',\n            borderColor: '#999',\n            borderRadius:'5px',\n            padding: '20px',\n          };\n\n        var styleContainer = {\n            paddingTop:'150px',\n        }\n\n        var tab = {\n            width: \"100%\",\n            paddingTop:\"140px\",\n            paddingBottom:\"140px\",\n            borderRadius: \"20px;\",\n            fontSize: '30px',\n        }\n        return(\n            <div>\n                <Navbar name={this.state.user.firstName+\" \"+this.state.user.lastName}\n                        onSignOut={this.signout}\n                        page={\"home\"}/>\n                <div className=\"container\" style={styleContainer}>\n                        {/* <Courses userid={this.state.user.idUser}></Courses> */}\n                        <div className=\"row\">\n                            <div className={this.state.role.isAdmin ? 'col' : 'hideen'}>   \n                                    <a href=\"/admin\" className=\"btn btn-outline-primary\" style={tab}> Admin </a>\n                            </div>\n                            <div className={this.state.role.isInstructor ? 'col' : 'hideen'}>\n                                <a href=\"/instructor\" className=\"btn btn-outline-primary\" style={tab}> Instructor </a>\n                            </div>\n                            <div className={this.state.role.isStudent  ? 'col' : 'hideen'}>\n                                <a href=\"/student\" className=\"btn btn-outline-primary\" style={tab}> Student </a>\n                            </div>\n                        </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport Api from '../Utils/Api';\n\nconst api = new Api();\n\nclass UserActions{\n    fetchUsers(){\n        api.getUsers().then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.USERS_FETCHED,\n                payload:    value,\n            });\n          });\n    }\n\n    updateUser(user){\n        api.updateUser(user.idUser, user.firstName, user.lastName, user.isAdmin).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.USER_UPDATED,\n                payload: value,\n            })\n        })\n    }\n\n    deleteUser(id){\n        api.deleteUser(id).then(value => {\n            Dispatcher.dispatch({\n                actionTypes: ActionTypes.USER_DELETED,\n                payload:value,\n            })\n        })\n    }\n}\n\nexport default new UserActions();\n","import { EventEmitter } from 'events';\nimport Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport CourseActions from '../Actions/CourseActions';\nimport UserActions from '../Actions/UserActions';\n\nconst USERS_CHANGED = \"USERS_CHANGED\";\n\nlet _users = [];\n\nclass UserStore extends EventEmitter {\n    constructor() {\n        super();\n         Dispatcher.register(this._registerToActions.bind(this));\n    }\n\n    // Switches over the action's type when an action is dispatched.\n    _registerToActions(action) {\n        switch(action.actionType) {\n            case ActionTypes.USERS_FETCHED:\n                this._setUsers(action.payload);\n                break;\n            case ActionTypes.USER_UPDATED:\n                UserActions.fetchUsers();\n                break;\n            case ActionTypes.USER_DELETED:\n                UserActions.fetchUsers();\n                break;\n        }\n    }\n\n    _setUsers(users){\n        _users = users;\n        setTimeout(() => { // Run after dispatcher has finished\n            this.emit(USERS_CHANGED);\n        }, 0);\n    }\n\n    getUsers(){\n        return _users;\n    }\n    onUsersChangedListener(callback){\n        this.on(USERS_CHANGED,callback);\n    }\n\n    removeUsersChangedListener(callback){\n        this.removeListener(USERS_CHANGED,callback);\n    }\n}\n\nexport default new UserStore();","import React, { Component } from 'react';\nimport UserActions from '../../Actions/UserActions';\nimport UserStore from '../../Stores/UserStore';\nimport AuthStore from '../../Stores/AuthStore';\n\n\nexport default class User extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            users:[],\n            selectedUser:{\n                idUser:-1,\n                isAdmin:false,\n                firstName:\"\",\n                lastName:\"\",\n                email:\"\",\n            }\n        }\n\n        this.onUsersChange = this.onUsersChange.bind(this);\n\n        this.handleChangeAdmin = this.handleChangeAdmin.bind(this);\n        this.handleDeleteUser = this.handleDeleteUser.bind(this);\n    }\n\n    componentWillMount(){\n        UserStore.onUsersChangedListener(this.onUsersChange);\n        UserActions.fetchUsers();\n    }\n\n    componentWillUnmount(){\n        UserStore.removeUsersChangedListener(this.onUsersChange);\n\n    }\n\n    onUsersChange(){\n        let users = UserStore.getUsers();\n        console.log(users);\n        \n        this.setState({\n            users: users,\n        })\n    }\n\n    handleChangeAdmin(u){\n\n        let user = {\n            idUser: u.idUser,\n            firstName: u.firstName,\n            lastName: u.lastName,\n            isAdmin: !u.isAdmin,\n        }        \n        UserActions.updateUser(user);\n    }\n\n    handleDeleteUser(u){\n        if(u.idUser===AuthStore._getUserid()){\n            alert(\"Can not delete account for yourself!\");\n            return;\n        }\n        UserActions.deleteUser(u.idUser);\n    }\n\n    render(){\n        let ret = this.state.users.map(u => {\n            return(\n             <tr>\n                 <th scope=\"row\">{u.idUser}</th>\n                 <td>\n                    {u.firstName}\n                 </td>\n                 <td>\n                    { u.lastName}\n                 </td>\n                 <td>\n                    <button className=\"btn btn-primary\" \n                            onClick={() => this.handleChangeAdmin(u)}>\n                        {u.isAdmin?'Yes':'No'}\n                    </button>\n                 </td>\n                 <td>\n                    <button className=\"btn btn-danger\" \n                            onClick={() => this.handleDeleteUser(u)}>\n                        Delete\n                    </button>\n                 </td>\n             </tr>\n            )\n         })\n        return(\n            <div>\n                <h3>Users</h3>\n                    <table class=\"table\">\n                    <thead>\n                        <tr>\n                        <th scope=\"col\">id</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Admin?</th>\n                        <th scope=\"col\">Delete?</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {ret}\n                    </tbody>\n                    </table>\n            </div>\n        );\n    }\n}","import Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport Api from '../Utils/Api';\nimport AuthStore from '../Stores/AuthStore';\n\nconst api = new Api();\n\nclass ClassActions{\n    fetchClasses(){\n        api.getClasses().then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASSES_FETCHED,\n                payload: value,\n            })\n        })\n    }\n    addClass(c){\n        api.addClass(c.name,AuthStore._getUserid(),c.startdate,c.enddate,c.courseid).then(value => {\n            Dispatcher.dispatch({\n                actionTypes: ActionTypes.CLASS_CREATED,\n                payload: value,\n            })\n        })\n    }\n\n    getClass(id){\n        api.getClass(id).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASS_FETCHED,\n                payload: value,\n            })\n        })\n    }\n\n    getClassStudents(id){\n        api.getClassStudents(id).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASS_STUDENTS_FETCHED,\n                payload: value,\n            })\n        })\n    }\n\n    getClassInstructorss(id){\n        api.getClassInstructors(id).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASS_INS_FETCHED,\n                payload: value,\n            })\n        })\n    }\n\n    addClassStudent(uid,cid){\n        api.addStudentToClass(uid,cid).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASS_STUDENT_ADDED,\n                payload: value,\n            })\n        })\n    }\n\n    addClassIns(uid,cid){\n        api.addInstructorToClass(uid,cid).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASS_INS_ADDED,\n                payload: value,\n            })\n        })\n    }\n\n    deleteClassStudent(uid,cid){\n        api.removeStudentFromClass(uid,cid).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASS_STUDENT_REMOVED,\n                payload: value,\n            })\n        })\n    }\n\n    deleteClassIns(uid,cid){\n        api.removeInstructorFromClass(uid,cid).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASS_INS_REMOVED,\n                payload: value,\n            })\n        })\n    }\n\n    fetchExams(classid){\n        api.getExamsInClass(classid).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.EXAMS_FETCHED,\n                payload: value,\n            })\n        })\n    }\n\n    createExam(classid,date,name,answerkey){\n        api.createExam(classid,date,answerkey,name).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.EXAM_CREATED,\n                payload: value,\n            })\n        })\n    }\n}\n\nexport default new ClassActions();","import React, { Component } from 'react';\nimport CourseStore from '../../Stores/CourseStore';\nimport CourseActions from '../../Actions/CourseActions';\nimport ClassActions from '../../Actions/ClassActions';\n\nexport default class AddClass extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            courses:[],\n            class:{\n                name: \"\",\n                courseid:\"\",\n                startdate:new Date(this),\n                enddate: new Date(this),\n                createdby: \"\",\n            }\n        }\n        this.onCoursesChanged = this.onCoursesChanged.bind(this);\n\n        this.onClassNameChanged = this.onClassNameChanged.bind(this);\n        this.onClassStartChanged = this.onClassStartChanged.bind(this);\n        this.onClassEndChanged = this.onClassEndChanged.bind(this);\n        this.onCourseIdChanged = this.onCourseIdChanged.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        CourseStore.addCoursesChangeListner(this.onCoursesChanged);\n        CourseActions.fetchCourses();\n    }\n\n    componentWillUnmount(){\n        CourseStore.removeCoursesChangeListner(this.onCoursesChanged);\n    }\n\n    onCoursesChanged(){\n        let courses=CourseStore._getCourses();\n        this.setState({\n            courses: courses,\n        })\n    }\n\n    onClassNameChanged(e){\n        e.preventDefault();\n        let _class = this.state.class;\n        _class.name = e.target.value;\n        this.setState({\n            class:_class,\n        })\n    }\n\n    onCourseIdChanged(e){\n        e.preventDefault();\n        let _class = this.state.class;\n        _class.courseid = e.target.value;\n        this.setState({\n            class:_class,\n        })\n    }\n\n    onClassStartChanged(e){\n        e.preventDefault();\n        let _class = this.state.class;\n        _class.startdate = e.target.value;\n        this.setState({\n            class:_class,\n        })\n    }\n\n    onClassEndChanged(e){\n        e.preventDefault();\n        let _class = this.state.class;\n        _class.enddate = e.target.value;\n        this.setState({\n            class:_class,\n        })\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        console.log(this.state);\n        ClassActions.addClass(this.state.class);\n        \n    }\n    render(){\n        let formStyle=({\n            backgroundColor:\"#eee\",\n            padding:\"20px\",\n            borderRadius:\"20px\",\n        })\n\n        let courseList = this.state.courses.map(c => {\n            return(\n                <option value={c.idCourse}>{c.name}</option>\n            )\n        })\n        return(\n            <form style={formStyle}>\n            <h2 for=\"name\">Add Class</h2>\n\n                <div class=\"row form-group\">\n                    <div className=\"col\">\n                        <label for=\"cname\">Enter Class Name</label>\n                        <input type=\"text\"\n                               class=\"form-control\" \n                               id=\"cname\" \n                               placeholder=\"Enter Class name\"\n                               value={this.state.class.name}\n                               onChange={this.onClassNameChanged}/>\n                    </div>\n                    <div className=\"col\">\n                        <label for=\"course-select\">Select Course</label>\n                        <select value={this.state.class.courseid} className=\"form-control\" id=\"course-select\" onChange={this.onCourseIdChanged}>\n                            {courseList}\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row form-group\">\n                    <div className=\"col\">\n                        <label for=\"start-date\">Enter Start Date</label>\n                        <input id=\"start-date\" type=\"date\" className=\"form-control\" value={this.state.class.startdate} onChange={this.onClassStartChanged}/>\n                    </div>\n                    <div className=\"col\">\n                        <label for=\"end-date\">Enter End Date</label>\n                        <input id=\"end-date\" type=\"date\" className=\"form-control\" value={this.state.class.enddate} onChange={this.onClassEndChanged}/>\n                    </div>\n                </div>\n                <button className=\"btn btn-primary\" onClick={this.handleSubmit}>Create Class</button>\n\n\n            </form>\n        );\n    }\n}","import { EventEmitter } from 'events';\nimport Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport CourseActions from '../Actions/CourseActions';\nimport UserActions from '../Actions/UserActions';\nimport ClassActions from '../Actions/ClassActions';\n\nconst CLASSES_CHANGED = \"CLASSES_CHANGED\";\nconst CLASS_CHANGED = \"CLASS_CHANGED\";\nconst CLASS_USERS_CHANGED = \"CLASS_USERS_CHANGED\";\n// const CLASS_STD_CHANGED = \"CLASS_STD_CHANGED\";\nlet _classes = [];\nlet _class= {};\nlet _classStudents = [];\nlet _classInstructors = [];\n\nclass ClassStore extends EventEmitter {\n    constructor() {\n        super();\n         Dispatcher.register(this._registerToActions.bind(this));\n    }\n\n    // Switches over the action's type when an action is dispatched.\n    _registerToActions(action) {        \n        switch(action.actionType) {\n            case ActionTypes.CLASSES_FETCHED:\n                this._setClasses(action.payload);\n                break;\n            case ActionTypes.CLASS_CREATED:\n                ClassActions.fetchClasses();\n                break;\n            case ActionTypes.CLASS_FETCHED:\n                this._setClass(action.payload);\n                break;\n            case ActionTypes.CLASS_STUDENTS_FETCHED:\n                this._setClassStudents(action.payload);\n                break;\n            case ActionTypes.CLASS_INS_FETCHED:\n                this._setClassInstructors(action.payload);\n                break;\n            case ActionTypes.CLASS_INS_ADDED:\n            case ActionTypes.CLASS_INS_REMOVED:\n            case ActionTypes.CLASS_STUDENT_ADDED:\n            case ActionTypes.CLASS_STUDENT_REMOVED:\n\n                setTimeout(() => { // Run after dispatcher has finished\n                    this.emit(CLASS_CHANGED);\n                }, 0);\n                break;\n        }\n    }\n\n    _setClasses(classes){\n        \n            _classes=classes;\n            setTimeout(() => { // Run after dispatcher has finished\n                this.emit(CLASSES_CHANGED);\n            }, 0);\n    }\n\n    _setClass(ezxmclass){\n        _class=ezxmclass;\n        setTimeout(() => { // Run after dispatcher has finished\n            this.emit(CLASS_CHANGED);\n        }, 0);\n    }\n\n    _setClassInstructors(users){\n        _classInstructors = users;\n        setTimeout(() => { // Run after dispatcher has finished\n            this.emit(CLASS_USERS_CHANGED);\n        }, 0);\n    }\n\n    _setClassStudents(users){\n        _classStudents = users;\n        setTimeout(() => { // Run after dispatcher has finished\n            this.emit(CLASS_USERS_CHANGED);\n        }, 0);\n    }\n\n\n    getClassIns(){\n        return _classInstructors;\n    }\n\n    getClassStudents(){\n        return _classStudents;\n    }\n\n    _getClasses(){\n        return _classes;\n    }\n\n    getClass(){\n        return _class;\n    }\n\n    addClassesChangedListner(callback){\n        this.on(CLASSES_CHANGED,callback);\n    }\n\n    removeClassesChangedListener(callback){\n        this.removeListener(CLASSES_CHANGED,callback);\n    }\n\n    addClassChangeListner(callback){\n        this.on(CLASS_CHANGED,callback);\n    }\n\n    removeClassChangeListener(callback){\n        this.removeListener(CLASS_CHANGED,callback);\n    }\n    \n\n    addClassUserChangeListner(callback){\n        this.on(CLASS_USERS_CHANGED,callback);\n    }\n\n    removeClassUserChangeListner(callback){\n        this.on(CLASS_USERS_CHANGED,callback);\n    }\n\n}\n\nexport default new ClassStore();","import React, { Component } from 'react';\nimport AddClass from './AddClass';\nimport ClassStore from '../../Stores/ClassStore';\nimport ClassActions from '../../Actions/ClassActions';\n\n\nexport default class Classes extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            classes:[],\n        }\n\n        this.onClassesChanged = this.onClassesChanged.bind(this);\n    }\n\n    componentWillMount(){\n        ClassStore.addClassesChangedListner(this.onClassesChanged);\n        ClassActions.fetchClasses();\n    }\n    \n    componentWillUnmount(){\n        ClassStore.removeClassesChangedListener(this.onClassesChanged);\n    }\n\n    onClassesChanged(){\n        let classes = ClassStore._getClasses();\n        this.setState({\n            classes: classes,\n        })\n    }\n    \n    render(){\n\n        const ret = this.state.classes.map(c => {\n            return(\n             <tr>\n                 <th scope=\"row\">{c.class_id}</th>\n                 <td>{c.classname}</td>\n                 <td>{c.starttime}</td>\n                 <td>{c.endtime}</td>\n                 <td>{c.coursename}</td>\n                 <td>{c.studentcount}</td>\n                 <td>{c.instructorcount}</td>\n                 <td><a href={c.class_id}>Details</a></td>\n             </tr>\n            )\n         })\n\n\n        return(\n            <div>\n                 <h3>Classes</h3>\n                    <table class=\"table\">\n                    <thead>\n                        <tr>\n                        <th scope=\"col\">id</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Start Date</th>\n                        <th scope=\"col\">End Date</th>\n                        <th scope=\"col\">Course Name</th>\n                        <th scope=\"col\"># of Students</th>\n                        <th scope=\"col\"># of Instructor</th>\n                        <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {ret}\n                    </tbody>\n                    </table>\n\n                    <hr\n                        style={{\n                                color: 'black',\n                                backgroundColor: '#aaa',\n                                height: '2px',\n                                borderRadius: '2px',\n                            }}\n                        />                  \n                     <AddClass/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\n\nexport default class UserList extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let users = this.props.users;\n        let onClick = this.props.onClick;\n        \n        let userView = users.map(u => {\n            return (\n                <li className=\"list-group-item \">\n                    <a href=\"\" className=\"d-flex justify-content-between align-items-center\"\n                               onClick={(e) => {e.preventDefault();onClick(u.idUser)}} \n                               title={u.email}>\n                            {u.firstName+\" \"+u.lastName}\n                            <span className= {this.props.operation===\"delete\"?\"badge  badge-pill badge-danger\":\"badge  badge-pill badge-primary\"}>{this.props.operation===\"delete\"?\"-\":\"+\"}</span>\n                        </a>\n                </li>\n            )\n        })\n        \n        return(\n            <ul class=\"list-group\" >\n                {userView}\n            </ul>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport AddClass from './AddClass';\nimport ClassStore from '../../Stores/ClassStore';\nimport ClassActions from '../../Actions/ClassActions';\nimport UserList from './UserList';\nimport UserActions from '../../Actions/UserActions';\nimport UserStore from '../../Stores/UserStore';\n\n\nexport default class ClassDetails extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n           classname:\"\",\n           starttime:\"\",\n           endtime:\"\",\n           coursename:\"\",\n           studentcount:\"\",\n           instructorcount:\"\",\n           allusers:[],\n           instructors:[],\n           Students:[],\n        }\n\n        this.onClassChanged = this.onClassChanged.bind(this);\n        this.onUsersChanged = this.onUsersChanged.bind(this);\n        this.onClassUsersChanged = this.onClassUsersChanged.bind(this);\n\n        this.onAddStudent = this.onAddStudent.bind(this);\n        this.onAddInstructor = this.onAddInstructor.bind(this);\n\n        this.onRemoveStudent = this.onRemoveStudent.bind(this);\n        this.onRemoveInstructor = this.onRemoveInstructor.bind(this);\n\n\n    }\n    componentDidMount(){\n        UserStore.onUsersChangedListener(this.onUsersChanged);\n        UserActions.fetchUsers();\n\n        ClassStore.addClassChangeListner(this.onClassChanged);\n        ClassStore.addClassUserChangeListner(this.onClassUsersChanged);\n        \n        ClassActions.getClass(this.props.match.params.id);\n        \n\n    }\n    componentWillUnmount(){\n        UserStore.removeListener(this.onUsersChanged);\n        ClassStore.removeClassUserChangeListner(this.onClassUsersChanged);\n        ClassStore.removeClassChangeListener(this.onClassChanged);\n\n    }\n\n    onClassChanged(){\n        let ezxmclass = ClassStore.getClass();\n\n\n        this.setState({\n           classname:ezxmclass.classname,\n           starttime:new Date(ezxmclass.starttime),\n           endtime:ezxmclass.endtime,\n           coursename:ezxmclass.coursename,\n           studentcount:ezxmclass.studentcount,\n           instructorcount:ezxmclass.instructorcount,\n\n        })\n\n        ClassActions.getClassInstructorss(this.props.match.params.id);\n        ClassActions.getClassStudents(this.props.match.params.id);\n    }\n\n    onClassUsersChanged(){\n        let classStudents = ClassStore.getClassStudents();\n        let classInst = ClassStore.getClassIns();\n        this.setState({\n            instructors:classInst,\n           Students: classStudents,\n           instructorcount:classInst.length,\n           studentcount: classStudents.length\n        })\n    }\n\n    onUsersChanged(){\n        let users = UserStore.getUsers();\n        this.setState({\n            allusers:users,\n        })\n    }\n\n    onAddStudent(uid){\n        let cid = this.props.match.params.id;\n        ClassActions.addClassStudent(uid,cid);\n    }\n\n    onAddInstructor(uid){\n        let cid = this.props.match.params.id;\n        ClassActions.addClassIns(uid,cid);\n    }\n    onRemoveStudent(uid){\n        let cid = this.props.match.params.id;\n        ClassActions.deleteClassStudent(uid,cid);\n    }\n    onRemoveInstructor(uid){\n        let cid = this.props.match.params.id;\n        ClassActions.deleteClassIns(uid,cid);\n    }\n    render(){\n        let loadingStyle = ({height:\"100vh\",width:\"100vw\"});\n        let formStyle=({\n            backgroundColor:\"#eee\",\n            padding:\"20px\",\n            borderRadius:\"20px\",\n        })\n\n        let loading = (\n            <div style={loadingStyle}>\n                <h1>Loading...</h1>\n            </div>\n        )\n\n        let users = this.state.allusers.filter(u => \n                (!this.state.instructors.map(us=>us.idUser).includes(u.idUser) && \n                !this.state.Students.map(us=>us.idUser).includes(u.idUser)));\n\n        return(\n            <div>\n                {this.state.classname===\"\"?loading:\"\"}\n                <h3>Class details for {this.state.classname}</h3>\n\n                <form style={formStyle} className=\"col col-md-8 offset-md-2\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <label for=\"name\">Class Name</label>\n                            <input type=\"text\" className=\"form-control\" value={this.state.classname} id=\"name\"/>\n                        </div>\n                        <div className=\"col\">\n                            <label for=\"coursename\">Course Name</label>\n                            <input type=\"text\" className=\"form-control\" value={this.state.coursename} id=\"coursename\" disabled/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                    <div className=\"col\">\n                            <label for=\"startdate\">Start Date</label>\n                            <input type=\"date\" className=\"form-control\" value={this.state.starttime} id=\"startdate\" />\n                        </div>\n                        <div className=\"col\">\n                            <label for=\"enddate\">End Date</label>\n                            <input type=\"date\" className=\"form-control\" value={this.state.endtime} id=\"enddate\"/>\n                        </div>\n                    </div>\n                    \n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <label for=\"insnum\"># of Instructors</label>\n                            <input type=\"text\" className=\"form-control\" value={this.state.instructorcount} id=\"insnum\" disabled/>\n                        </div>\n                        <div className=\"col\">\n                            <label for=\"stdnum\"># of Students</label>\n                            <input type=\"text\" className=\"form-control\" value={this.state.studentcount} id=\"stdnum\" disabled/>\n                        </div>\n                    </div>\n\n                </form>\n                <br></br>\n                <div>\n                    <div className=\"col col-md-8 offset-md-2 row \" >\n                        <div className=\"col\" style={formStyle}>\n                            <h6>Current Instructors</h6>\n                            <p>Click remove</p>\n                            <UserList \n                                    users={this.state.instructors}\n                                    onClick={this.onRemoveInstructor}\n                                    operation={\"delete\"}\n                                    />\n                        </div>\n\n                        <div className=\"col offset-md-1\" style={formStyle}>\n                            <h6>Add Instructors</h6>\n                            <p>Click add</p>\n                            <UserList \n                                    users={users}\n                                    onClick={this.onAddInstructor}\n                                    operation={\"add\"}\n                                    />\n                           \n                        </div>\n\n                    </div>\n\n                    <br></br>\n                    <div className=\"col col-md-8 offset-md-2 row \" >\n                        <div className=\"col\" style={formStyle}>\n                            <h6>Current Students</h6>\n                            <p>Click remove</p>\n\n                            <UserList \n                                    users={this.state.Students}\n                                    onClick={this.onRemoveStudent}\n                                    operation={\"delete\"}\n                                    />\n                        </div>\n                        \n                        <div className=\"col offset-md-1\" style={formStyle}>\n                            <h6>Add Students</h6>\n                            <p>Click add</p>\n\n                                <UserList \n                                    users={users}\n                                    onClick={this.onAddStudent}\n                                    operation={\"add\"}\n                                    />\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport AuthActions from '../Actions/AuthActions';\nimport AuthStore from '../Stores/AuthStore';\nimport Courses from './Course/Course';\nimport Navbar from './Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport User from './Admin/User';\nimport Classes from './Admin/Classes';\nimport ClassDetails from './Admin/ClassDetails';\n\n\n\n\nclass AdminHome extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n           user: {\n               firstName: \"\",\n               lastName: \"\",\n               idUser: -1,\n           },\n        }\n        this._onProfileChanged = this._onProfileChanged.bind(this);\n        this.signout = this.signout.bind(this);\n    }\n\n    componentWillMount(){\n        if(!localStorage.getItem(\"userid\")){\n            this.props.history.replace(\"./signin\");            \n        }\n        else{\n            AuthStore.addProfileChangeListener(this._onProfileChanged);\n            // console.log(AuthStore._getUserid().userid);\n            AuthActions.getUser(AuthStore._getUserid());\n        }\n    }\n\n    componentWillUnmount(){\n        AuthStore.removeProfileChangeListener(this._onProfileChanged);\n    }\n    \n    _onProfileChanged(){\n        var _user = AuthStore._getUser();\n        this.setState({\n            user: _user,\n        })\n    }\n\n    signout(){\n        localStorage.clear();\n        window.location.href = \"/\";\n\n    }\n\n    render(){\n        var styles1 = {\n           \n            // border: 'solid 1px',\n            borderColor: '#999',\n            borderRadius:'5px',\n            padding: '20px',\n          };\n\n        var styleContainer = {\n            paddingTop:'50px',\n        }\n\n        var tab = {\n            width: \"100%\",\n            paddingTop:\"140px\",\n            paddingBottom:\"140px\",\n            borderRadius: \"20px;\",\n            fontSize: '30px',\n        }\n        return(\n            <div>\n                <Navbar name={this.state.user.firstName+\" \"+this.state.user.lastName}\n                        onSignOut={this.signout}\n                        page={\"Admin home\"}/>\n                <div className=\"container\" style={styleContainer}>\n                <Router>\n                    <Route exact path=\"/admin/user/\" component={User}/>\n                    <Route exact path=\"/admin/course/\" component={Courses} userid={this.state.user.idUser}/>\n                    <Route exact path=\"/admin/class/:id\" component={ClassDetails} />\n                    <Route exact path=\"/admin/class/\" component={Classes} />\n                    <Route exact path=\"/admin/\" component={User}/>\n                </Router>        \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AdminHome;","import Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport Api from '../Utils/Api';\n\nconst api = new Api();\n\nclass InstructorActions{\n    fetchInstructorClasses(){\n        api.getClassesForInstructor().then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASSES_FETCHED,\n                payload: value,\n            })\n        })\n    }\n\n\n\n}\n\nexport default new InstructorActions();","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InstructorActions from '../../Actions/InstructorActions';\nimport ClassStore from '../../Stores/ClassStore';\n\n\n\n\nexport default class InstructorClasses extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            classes:[],\n        }\n        this.onClassesChanged = this.onClassesChanged.bind(this);\n    }\n\n    componentDidMount(){\n        ClassStore.addClassesChangedListner(this.onClassesChanged);\n        InstructorActions.fetchInstructorClasses();\n    }\n    componentWillUnmount(){\n        ClassStore.removeClassChangeListener(this.onClassesChanged);\n    }\n\n    onClassesChanged(){\n        this.setState({\n            classes:ClassStore._getClasses(),\n        })\n    }\n\n    render(){\n        let classes = this.state.classes.map(c => {\n            return (\n                <li class=\"list-group-item\">\n                    <a href={\"/instructor/class/\"+c.idClass} > {c.className} </a>\n                </li>\n            )\n        })\n        return(\n            <div>\n                <h3>My Classes</h3>\n                <ul className=\"list-group col col-md-8 offset-md-2\">\n                    {classes}\n                </ul>\n            </div>\n        )\n    }\n    \n}","import { EventEmitter } from 'events';\nimport Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport CourseActions from '../Actions/CourseActions';\nimport ClassActions from '../Actions/ClassActions';\nimport ClassStore from './ClassStore';\n\nconst EXAMS_CHANGED = 'EXAMS_CHANGED';\nconst EXAM_CREATED = 'EXAM_CREATED';\nconst EXAM_CHANGED = 'EXAM_CHANGED';\nconst EXAM_UPDATED = 'EXAM_UPDATED';\nlet _exams = [];\nlet _exam={};\n\nclass ExamStore extends EventEmitter {\n    constructor() {\n        super();\n         Dispatcher.register(this._registerToActions.bind(this));\n    }\n\n    // Switches over the action's type when an action is dispatched.\n    _registerToActions(action) {\n        switch(action.actionType) {\n            case ActionTypes.EXAMS_FETCHED:\n                this._setExams(action.payload);\n                break;\n            case ActionTypes.EXAM_CREATED:\n                setTimeout(() => { // Run after dispatcher has finished\n                    this.emit(EXAM_CREATED);\n                }, 0);\n                break;\n            case ActionTypes.EXAMS_DELETED:\n                setTimeout(() => { // Run after dispatcher has finished\n                    this.emit(EXAM_CREATED);\n                }, 0);\n                break;\n            case ActionTypes.EXAM_FETCHED:\n                this._setExam(action.payload);\n                break;\n            case ActionTypes.EXAM_UPDATED:\n            setTimeout(() => { // Run after dispatcher has finished\n                this.emit(EXAM_UPDATED);\n            }, 0);\n        }\n    }\n\n    _setExams(exams){\n        if(exams){\n            _exams=exams;\n            setTimeout(() => { // Run after dispatcher has finished\n                this.emit(EXAMS_CHANGED);\n            }, 0);\n        }\n    }\n\n    getExams(){\n        return _exams;\n    }\n\n    _setExam(exam){\n        if(exam){\n            _exam=exam;\n            setTimeout(() => { // Run after dispatcher has finished\n                this.emit(EXAM_CHANGED);\n            }, 0);\n        }\n    }\n\n    getExam(){\n        return _exam;\n    }\n\n    addExamUpdateListener(callback){\n        this.on(EXAM_UPDATED,callback);\n\n    }\n\n    removeExamUpdatedListner(callback){\n        this.removeListener(EXAM_UPDATED,callback);\n\n    }\n    addExamChangeListner(callback){\n        this.on(EXAM_CHANGED,callback);\n    }\n\n    removeExamChangeListner(callback){\n        this.removeListener(EXAM_CHANGED,callback);\n    }\n    addExamsChangeListerner(callback){\n        this.on(EXAMS_CHANGED,callback);\n    }\n    \n    removeExamsChangeListener(callback){\n        this.removeListener(EXAMS_CHANGED,callback);\n    }\n\n    addExamsAddListerner(callback){\n        this.on(EXAM_CREATED,callback);\n    }\n    \n    removeExamsAddListener(callback){\n        this.removeListener(EXAM_CREATED,callback);\n    }\n}\n\nexport default new ExamStore();","import Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport Api from '../Utils/Api';\n\nconst api = new Api();\n\nclass ExamActions{\n    getExam(id){\n        api.getExam(id).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.EXAM_FETCHED,\n                payload: value,\n            })\n        })\n    }\n\n    deleteExam(id){\n        api.deleteExam(id).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.EXAMS_DELETED,\n                payload: value,\n            })\n        })\n    }\n\n    updateAnswerKey(examid,answerkey){\n        api.updateAnswerKey(examid,answerkey).then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.EXAM_UPDATED,\n                payload: value,\n            })\n        })\n    }\n\n    getStudentExam(examid){\n        api.getStudentExam(examid).then(value => {\n            Dispatcher.dispatch({\n                actionType:ActionTypes.EXAM_FETCHED,\n                payload:value,\n            })\n        })\n    }\n\n\n}\n\nexport default new ExamActions();","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport UserList from '../Admin/UserList';\nimport ClassStore from '../../Stores/ClassStore';\nimport ClassActions from '../../Actions/ClassActions';\nimport ExamStore from '../../Stores/ExamStore';\nimport ExamActions from '../../Actions/ExamActions';\n\n\n\n\nexport default class ClassExams extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            exams:[],\n        }\n        this.onExamsChanged=this.onExamsChanged.bind(this);\n    }\n\n    componentDidMount(){\n        ExamStore.addExamsChangeListerner(this.onExamsChanged);\n        ClassActions.fetchExams(this.props.classid);\n    }\n\n    componentWillUnmount(){\n        ExamStore.removeExamsChangeListener(this.onExamsChanged);\n    }\n\n    onExamsChanged(){\n        let exams = ExamStore.getExams();\n        this.setState({\n            exams:exams,\n        })\n    }\n\n    handleDelete(id){\n        console.log(id);\n        ExamActions.deleteExam(id);\n    }\n    render(){\n        let exams=this.state.exams.map(e => {\n            return (\n                <li className=\"list-group-item md-auto\">\n                    <a href={\"/instructor/exam/\"+e.idExam}>{e.exam_name}</a>\n                    <a className=\"float-right\"href=\"\" onClick={(f)=>{f.preventDefault();this.handleDelete(e.idExam)}}><span class=\"badge badge-danger\">-</span></a>\n                </li>\n            )\n        })\n        return(\n            <ul className=\"col col-md-10 offset-md-1 list-group\">\n                {exams}\n            </ul>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport UserList from '../Admin/UserList';\nimport ClassStore from '../../Stores/ClassStore';\nimport ClassActions from '../../Actions/ClassActions';\nimport ClassExams from './ClassExams';\nimport ExamStore from '../../Stores/ExamStore';\n\n\n\n\nexport default class AddExam extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            exam_name:\"\",\n            date:\"\",\n            answerkey:\"\",\n        }\n\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleAnswerKeyChange = this.handleAnswerKeyChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.onExamAdded = this.onExamAdded.bind(this);\n    }\n\n    componentDidMount(){\n        ExamStore.addExamsAddListerner(this.onExamAdded);\n    }\n\n    componentWillUnmount(){\n        ExamStore.removeExamsAddListener(this.onExamAdded);\n    }\n\n    onExamAdded(){\n        ClassActions.fetchExams(this.props.classid);\n    }\n    handleNameChange(e){\n        e.preventDefault();\n        this.setState({\n            exam_name: e.target.value,\n        })\n    }\n\n    handleDateChange(e){\n        e.preventDefault();\n        this.setState({\n            date: e.target.value,\n        })\n    }\n\n    handleAnswerKeyChange(e){\n        e.preventDefault();\n        this.setState({\n            answerkey: e.target.value,\n        })\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        ClassActions.createExam(this.props.classid,this.state.date,this.state.exam_name,this.state.answerkey);\n    }\n\n    render(){\n        let formStyle=({\n            backgroundColor:\"#eee\",\n            padding:\"20px\",\n            borderRadius:\"5px\",\n        })\n\n        return(\n\n            <div className=\"col col-md-10 offset-md-1\" style={formStyle}>\n                <h5>Add Exam</h5>\n                <form>\n\n                    <div className=\"col col-md-12 form-group\">\n                        <lable for=\"name\">Enter Exam Name:</lable>\n                        <input className=\"form-control\" type=\"text\" id=\"name\" value={this.state.exam_name} onChange={this.handleNameChange}/>\n                    </div>\n                    <div className=\"col col-md-12 form-group\">\n                        <lable for=\"date\">Enter Exam Date:</lable>\n                        <input className=\"form-control\" type=\"date\" id=\"date\" value={this.state.date} onChange={this.handleDateChange}/>\n                    </div>\n                    <div className=\"col col-md-12 form-group\">\n                        <lable for=\"answer\">Enter comma seperated answer key:</lable>\n                        <textarea  className=\"form-control\" id=\"answer\" value={this.state.answerkey} onChange={this.handleAnswerKeyChange}/>\n                    </div>\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmit}>Create</button>\n                </form>\n            </div>\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport UserList from '../Admin/UserList';\nimport ClassStore from '../../Stores/ClassStore';\nimport ClassActions from '../../Actions/ClassActions';\nimport ClassExams from './ClassExams';\nimport AddExam from './AddExam';\n\n\n\n\nexport default class InstructorClass extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            classname:\"\",\n            starttime:\"\",\n            endtime:\"\",\n            coursename:\"\",\n            studentcount:\"\",\n            instructorcount:\"\",\n            allusers:[],\n            instructors:[],\n            Students:[],\n        }\n        this.onClassChange = this.onClassChange.bind(this);\n        this.onClassUsersChange = this.onClassUsersChange.bind(this);\n        this.onAdd = this.onAdd.bind(this);\n    }\n\n    componentWillMount(){\n        ClassStore.addClassChangeListner(this.onClassChange);\n        ClassStore.addClassUserChangeListner(this.onClassUsersChange);\n        ClassActions.getClass(this.props.match.params.id);\n    }\n\n    componentWillUnmount(){\n        ClassStore.removeClassChangeListener(this.onClassChange);\n        ClassStore.removeClassUserChangeListner(this.onClassUsersChange);\n    }\n\n    onClassChange(){\n        let ezxmclass = ClassStore.getClass();\n\n\n        this.setState({\n           classname:ezxmclass.classname,\n           starttime:new Date(ezxmclass.starttime),\n           endtime:ezxmclass.endtime,\n           coursename:ezxmclass.coursename,\n           studentcount:ezxmclass.studentcount,\n           instructorcount:ezxmclass.instructorcount,\n\n        })\n\n        ClassActions.getClassInstructorss(this.props.match.params.id);\n        ClassActions.getClassStudents(this.props.match.params.id);\n    }\n\n    onClassUsersChange(){\n        let classStudents = ClassStore.getClassStudents();\n        let classInst = ClassStore.getClassIns();\n        this.setState({\n            instructors:classInst,\n           Students: classStudents,\n           instructorcount:classInst.length,\n           studentcount: classStudents.length\n        })\n    }\n\n    onAdd(e){\n        alert(\"Instructors can not perform this action, contact Admin!!\");\n    }\n    render(){\n        let formStyle=({\n            backgroundColor:\"#eee\",\n            padding:\"20px\",\n            borderRadius:\"5px\",\n        })\n\n        let divStyle=({\n            backgroundColor:\"#eee\",\n            padding:\"20px\",\n            borderRadius:\"5px\",\n            margin:\"0px\"\n        })\n        return (\n            <div className=\"row\">\n                <div className=\"col col-md-6 border-right\">\n                    <h3>Showing details for class: {this.state.classname}</h3>\n                    <form style={formStyle}>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <label for=\"name\">Class Name</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.classname} id=\"name\" disabled/>\n                            </div>\n                            <div className=\"col\">\n                                <label for=\"coursename\">Course Name</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.coursename} id=\"coursename\" disabled/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                        <div className=\"col\">\n                                <label for=\"startdate\">Start Date</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.starttime} id=\"startdate\" disabled/>\n                            </div>\n                            <div className=\"col\">\n                                <label for=\"enddate\">End Date</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.endtime} id=\"enddate\" disabled/>\n                            </div>\n                        </div>\n                        \n                        <div>\n                            <div className=\"col\">\n                                <label for=\"insnum\"># of Instructors</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.instructorcount} id=\"insnum\" disabled/>\n                            </div>\n                            <div className=\"col\">\n                                <label for=\"stdnum\"># of Students</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.studentcount} id=\"stdnum\" disabled/>\n                            </div>\n                        </div>\n\n                    </form>\n                    <br/>\n                    <div style={divStyle} className=\"row\">\n                            <div className=\"col col-md-6\">\n                                <h6>Current Instructors</h6>\n                                <UserList \n                                        users={this.state.instructors}\n                                        onClick={this.onAdd}\n                                        operation={\"delete\"}\n                                        />\n                            </div>\n\n                            <div className=\"col col-md-6\">\n                                <h6>Current Students</h6>\n\n                                <UserList \n                                        users={this.state.Students}\n                                        onClick={this.onAdd}\n                                        operation={\"delete\"}\n                                        />\n                            </div>\n                    </div>\n                </div>\n                <div className=\"col col-md-6 border-left\">\n                    <h3>Exams for this class</h3>\n                    <div className=\"row\">\n                        <ClassExams classid={this.props.match.params.id}></ClassExams>\n                    </div>\n                    <br/>\n                    <div className=\"row\">\n                        <AddExam classid={this.props.match.params.id}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InstructorClasses from './InstructorClasses';\nimport InstructorClass from './InstructorClass';\nimport ExamStore from '../../Stores/ExamStore';\nimport ExamActions from '../../Actions/ExamActions';\n\n\n\n\nexport default class InstructorExam extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name:\"\",\n            date:\"\",\n            answerkey:\"\",\n            createdBy:\"\",\n            students:[],\n            \n        }\n        this.onExamReceived= this.onExamReceived.bind(this);\n        this.onAnswerKeyUpdated = this.onAnswerKeyUpdated.bind(this);\n\n        this.handleAnswerChange = this.handleAnswerChange.bind(this);\n        this.handleAnswerKeyChange = this.handleAnswerKeyChange.bind(this);\n    }\n\n    componentDidMount(){\n        ExamStore.addExamChangeListner(this.onExamReceived);\n        ExamStore.addExamUpdateListener(this.onAnswerKeyUpdated);\n        ExamActions.getExam(this.props.match.params.examid);\n    }\n    componentWillUnmount(){\n        ExamStore.removeExamChangeListner(this.onExamReceived);\n        ExamStore.removeExamUpdatedListner(this.onAnswerKeyUpdated);\n\n    }\n\n    onExamReceived(){\n        let e = ExamStore.getExam();\n        this.setState({\n            name:e.exam_name,\n            date:e.date,\n            answerkey:e.answerkey,\n            createdBy:e.firstname+\" \"+e.lastname,\n            students:e.Students,\n        })\n    \n    }\n    \n    onAnswerKeyUpdated(){\n        ExamActions.getExam(this.props.match.params.examid);\n    }\n\n    handleAnswerKeyChange(e){\n        e.preventDefault();\n        ExamActions.updateAnswerKey(this.props.match.params.examid,this.state.answerkey);\n    }\n\n    handleAnswerChange(e){\n        e.preventDefault();\n        this.setState({\n            answerkey:e.target.value\n        })\n    }\n\n\n    marks(studentanswers){\n        let answerkey = this.state.answerkey.split(\",\");\n        studentanswers = studentanswers.split(\",\");\n        var i,mark=0;\n        for (i = 0; i < answerkey.length; i++) { \n            if(studentanswers[i]===answerkey[i]){\n                mark+=1;\n            }\n        }\n        return mark;\n    }\n\n    render(){\n        let x = 0;\n        let students = this.state.students.map(s => {\n            x = x+1;\n            return (\n                <tr>\n                    <th scope=\"row\">{x}</th>\n                    <td>{s.StudentFirstName+\" \"+s.StudentLastName}</td>\n                    <td>{s.answerkey}</td>\n                    <td>{this.marks(s.answerkey)}</td>\n                </tr>\n            )\n        })\n        return(\n            <div className=\"row\">\n                <div id=\"exam-detais\" className=\"col col-md-4 border-right\">\n                    <h3>Exam Details</h3>\n                    <p><b>Name:</b>{this.state.name}</p>\n                    <p><b>Date:</b>{this.state.date}</p>\n                    <p><b>Created By:</b>{this.state.createdBy}</p>\n                    <p><b>AnswerKey:</b>\n                        <textarea className=\"form-control\" value={this.state.answerkey} onChange={this.handleAnswerChange}>\n                            \n                        </textarea>\n                    </p>\n                    <button className=\"btn btn-primary\" onClick={this.handleAnswerKeyChange}>Update</button>\n\n                </div>\n                <div id=\"exam-results border-right\" className=\"col col-md-8\">\n                    <h3>Results</h3>\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Answers</th>\n                            <th scope=\"col\">Marks</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {students}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InstructorClasses from './InstructorClasses';\nimport InstructorClass from './InstructorClass';\nimport InstructorExam from './InstructorExam';\n\n\n\n\nclass InstructorHome extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n           user: {\n               firstName: \"\",\n               lastName: \"\",\n               idUser: -1,\n           },\n        }\n        this._onProfileChanged = this._onProfileChanged.bind(this);\n        this.signout = this.signout.bind(this);\n    }\n\n    componentWillMount(){\n        if(!localStorage.getItem(\"userid\")){\n            this.props.history.replace(\"./signin\");            \n        }\n        else{\n            AuthStore.addProfileChangeListener(this._onProfileChanged);\n            // console.log(AuthStore._getUserid().userid);\n            AuthActions.getUser(AuthStore._getUserid());\n        }\n    }\n\n    componentWillUnmount(){\n        AuthStore.removeProfileChangeListener(this._onProfileChanged);\n    }\n    \n    _onProfileChanged(){\n        var _user = AuthStore._getUser();\n        this.setState({\n            user: _user,\n        })\n    }\n\n    signout(){\n        localStorage.clear();\n        window.location.href = \"/\";\n\n    }\n\n    render(){\n        var styles1 = {\n           \n            // border: 'solid 1px',\n            borderColor: '#999',\n            borderRadius:'5px',\n            padding: '20px',\n          };\n\n        var styleContainer = {\n            paddingTop:'50px',\n        }\n\n        var tab = {\n            width: \"100%\",\n            paddingTop:\"140px\",\n            paddingBottom:\"140px\",\n            borderRadius: \"20px;\",\n            fontSize: '30px',\n        }\n        return(\n            <div>\n                <Navbar name={this.state.user.firstName+\" \"+this.state.user.lastName}\n                        onSignOut={this.signout}\n                        page={\"Instructor home\"}/>\n                <div className=\"container\" style={styleContainer}>\n                <Router>\n                    {/* <Route exact path=\"/admin/user/\" component={User}/>\n                    <Route exact path=\"/admin/course/\" component={Courses} userid={this.state.user.idUser}/>\n                    <Route exact path=\"/admin/class/:id\" component={ClassDetails} />\n                    <Route exact path=\"/admin/class/\" component={Classes} />\n                    */}\n                    <Route exact path=\"/instructor/class/:id\" component={InstructorClass}/>\n                    <Route exact path=\"/instructor/class\" component={InstructorClasses}/>\n                    <Route exact path=\"/instructor/exam/:examid\" component={InstructorExam}/>\n                    <Route exact path=\"/instructor/\" component={InstructorClasses}/> \n                </Router>        \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default InstructorHome;","import Dispatcher from '../dispatcher';\nimport ActionTypes from '../Constants';\nimport Api from '../Utils/Api';\nimport ExamActions from './ExamActions';\n\nconst api = new Api();\n\nclass InstructorActions{\n    fetchStudentClasses(){\n        api.getClassesForStudent().then(value => {\n            Dispatcher.dispatch({\n                actionType: ActionTypes.CLASSES_FETCHED,\n                payload: value,\n            })\n        })\n    }\n\n    submitExamAnswers(examid,answers){\n        api.submitAnswer(examid,answers).then(value => {\n            ExamActions.getStudentExam(value.examid);\n        })\n    }\n\n\n}\n\nexport default new InstructorActions();","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InstructorActions from '../../Actions/InstructorActions';\nimport ClassStore from '../../Stores/ClassStore';\nimport StudentActions from '../../Actions/StudentActions';\n\n\n\n\nexport default class StudentClasses extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            classes:[],\n        }\n        this.onClassesChanged = this.onClassesChanged.bind(this);\n    }\n\n    componentDidMount(){\n        ClassStore.addClassesChangedListner(this.onClassesChanged);\n        StudentActions.fetchStudentClasses();\n    }\n    componentWillUnmount(){\n        ClassStore.removeClassChangeListener(this.onClassesChanged);\n    }\n\n    onClassesChanged(){\n        this.setState({\n            classes:ClassStore._getClasses(),\n        })\n    }\n\n    render(){\n        let classes = this.state.classes.map(c => {\n            return (\n                <li class=\"list-group-item\">\n                    <a href={\"/student/class/\"+c.idClass} > {c.className} </a>\n                </li>\n            )\n        })\n        return(\n            <div>\n                <h3>My Classes</h3>\n                <ul className=\"list-group col col-md-8 offset-md-2\">\n                    {classes}\n                </ul>\n            </div>\n        )\n    }\n    \n}","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport UserList from '../Admin/UserList';\nimport ClassStore from '../../Stores/ClassStore';\nimport ClassActions from '../../Actions/ClassActions';\nimport ExamStore from '../../Stores/ExamStore';\nimport ExamActions from '../../Actions/ExamActions';\n\n\n\n\nexport default class StudentClassExams extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            exams:[],\n        }\n        this.onExamsChanged=this.onExamsChanged.bind(this);\n    }\n\n    componentDidMount(){\n        ExamStore.addExamsChangeListerner(this.onExamsChanged);\n        ClassActions.fetchExams(this.props.classid);\n    }\n\n    componentWillUnmount(){\n        ExamStore.removeExamsChangeListener(this.onExamsChanged);\n    }\n\n    onExamsChanged(){\n        let exams = ExamStore.getExams();\n        this.setState({\n            exams:exams,\n        })\n    }\n\n    handleDelete(id){\n        console.log(id);\n        ExamActions.deleteExam(id);\n    }\n    render(){\n        let exams=this.state.exams.map(e => {\n            return (\n                <li className=\"list-group-item md-auto\">\n                    <a href={\"/student/exam/\"+e.idExam}>{e.exam_name}</a>\n                </li>\n            )\n        })\n        return(\n            <ul className=\"col col-md-10 offset-md-1 list-group\">\n                {exams}\n            </ul>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport UserList from '../Admin/UserList';\nimport ClassStore from '../../Stores/ClassStore';\nimport ClassActions from '../../Actions/ClassActions';\nimport ClassExams from '../Instructor/ClassExams';\nimport StudentClassExams from './StudentClassExams';\n\n\n\n\nexport default class StudentClass extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            classname:\"\",\n            starttime:\"\",\n            endtime:\"\",\n            coursename:\"\",\n            studentcount:\"\",\n            instructorcount:\"\",\n            allusers:[],\n            instructors:[],\n            Students:[],\n        }\n        this.onClassChange = this.onClassChange.bind(this);\n        this.onClassUsersChange = this.onClassUsersChange.bind(this);\n        this.onAdd = this.onAdd.bind(this);\n    }\n\n    componentWillMount(){\n        ClassStore.addClassChangeListner(this.onClassChange);\n        ClassStore.addClassUserChangeListner(this.onClassUsersChange);\n        ClassActions.getClass(this.props.match.params.id);\n    }\n\n    componentWillUnmount(){\n        ClassStore.removeClassChangeListener(this.onClassChange);\n        ClassStore.removeClassUserChangeListner(this.onClassUsersChange);\n    }\n\n    onClassChange(){\n        let ezxmclass = ClassStore.getClass();\n\n\n        this.setState({\n           classname:ezxmclass.classname,\n           starttime:new Date(ezxmclass.starttime),\n           endtime:ezxmclass.endtime,\n           coursename:ezxmclass.coursename,\n           studentcount:ezxmclass.studentcount,\n           instructorcount:ezxmclass.instructorcount,\n\n        })\n\n        ClassActions.getClassInstructorss(this.props.match.params.id);\n        ClassActions.getClassStudents(this.props.match.params.id);\n    }\n\n    onClassUsersChange(){\n        let classStudents = ClassStore.getClassStudents();\n        let classInst = ClassStore.getClassIns();\n        this.setState({\n            instructors:classInst,\n           Students: classStudents,\n           instructorcount:classInst.length,\n           studentcount: classStudents.length\n        })\n    }\n\n    onAdd(e){\n        alert(\"Instructors can not perform this action, contact Admin!!\");\n    }\n    render(){\n        let formStyle=({\n            backgroundColor:\"#eee\",\n            padding:\"20px\",\n            borderRadius:\"5px\",\n        })\n\n        let divStyle=({\n            backgroundColor:\"#eee\",\n            padding:\"20px\",\n            borderRadius:\"5px\",\n            margin:\"0px\"\n        })\n        return (\n            <div className=\"row\">\n                <div className=\"col col-md-12\">\n                    <h3>Showing details for class: {this.state.classname}</h3>\n\n                </div>\n                <div className=\"col col-md-6 border-right\">\n                    <form style={formStyle}>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <label for=\"name\">Class Name</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.classname} id=\"name\" disabled/>\n                            </div>\n                            <div className=\"col\">\n                                <label for=\"coursename\">Course Name</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.coursename} id=\"coursename\" disabled/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                        <div className=\"col\">\n                                <label for=\"startdate\">Start Date</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.starttime} id=\"startdate\" disabled/>\n                            </div>\n                            <div className=\"col\">\n                                <label for=\"enddate\">End Date</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.endtime} id=\"enddate\" disabled/>\n                            </div>\n                        </div>\n                        \n                        <div className=\"row\">\n                            <div className=\"col col-md-6\">\n                                <label for=\"insnum\"># of Instructors</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.instructorcount} id=\"insnum\" disabled/>\n                            </div>\n                            <div className=\"col col-md-6\">\n                                <label for=\"stdnum\"># of Students</label>\n                                <input type=\"text\" className=\"form-control\" value={this.state.studentcount} id=\"stdnum\" disabled/>\n                            </div>\n                        </div>\n\n                    </form>\n                    <br/>\n                </div>\n                <div className=\"col col-md-6 border-left\">\n                    <h3>Exams for this class</h3>\n                    <div className=\"row\">\n                        <StudentClassExams classid={this.props.match.params.id}></StudentClassExams>\n                    </div>\n                    <br/>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport ExamStore from '../../Stores/ExamStore';\nimport ExamActions from '../../Actions/ExamActions';\n\n\n\n\nexport default class StudentResult extends Component{\n\n\n    render(){\n        return(\n\n        <div>\n        <h3>Results</h3>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Answers</th>\n                <th scope=\"col\">Marks</th>\n                </tr>\n            </thead>\n            <tbody>\n                {this.props.students}\n            </tbody>\n        </table>\n        </div>);\n    }\n}","import React, { Component } from 'react';\nimport ExamStore from '../../Stores/ExamStore';\nimport ExamActions from '../../Actions/ExamActions';\nimport StudentResult from './StudentResult';\n\n\n\n\nexport default class OmrSheet extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            numberOfQuestion:0,\n            answers:[],\n            started:false,\n        }\n        this.start=this.start.bind(this);\n        this.submit=this.submit.bind(this);\n    }\n\n    start(e){\n        e.preventDefault();\n        var i;\n        var ans=[];\n        for(i=1;i<=this.props.numberOfQuestion;i++){\n            ans.push({id:i,A:false,B:false,C:false,D:false});\n        }\n        this.setState({\n            numberOfQuestion:this.props.numberOfQuestion,\n            answers:ans,\n            started:true,\n        })\n    }\n\n    handleCheckA(i){\n        console.log(i);\n        \n        let ans = this.state.answers;\n        if(ans[i-1].A){\n            ans[i-1].A=false;\n        }else{\n            ans[i-1].A=true;\n        }\n        this.setState({\n            answers:ans,\n        })\n    }\n    \n    handleCheckB(i){\n        console.log(i);\n        \n        let ans = this.state.answers;\n        if(ans[i-1].B){\n            ans[i-1].B=false;\n        }else{\n            ans[i-1].B=true;\n        }\n        this.setState({\n            answers:ans,\n        })\n    }\n\n    handleCheckC(i){\n        console.log(i);\n        \n        let ans = this.state.answers;\n        if(ans[i-1].C){\n            ans[i-1].C=false;\n        }else{\n            ans[i-1].C=true;\n        }\n        this.setState({\n            answers:ans,\n        })\n    }\n\n    handleCheckD(i){\n        console.log(i);\n        \n        let ans = this.state.answers;\n        if(ans[i-1].D){\n            ans[i-1].D=false;\n        }else{\n            ans[i-1].D=true;\n        }\n        this.setState({\n            answers:ans,\n        })\n    }\n\n    submit(e){\n        e.preventDefault();\n        let ans = this.state.answers;\n        ans = ans.map(a => {\n            let st=\"\";\n            st = a.A?st+\"A\":st;\n            st = a.B?st+\"B\":st;\n            st = a.C?st+\"C\":st;\n            st = a.D?st+\"D\":st;\n\n            return st;\n        })\n        this.props.onSubmit(ans.join(\",\"));\n    }\n\n    render(){\n       \n        let rows=[];\n        var i;\n        rows = this.state.answers.map(row => {\n            return(\n\n                     <tr>\n                    <th scope=\"row\">{row.id}</th>\n                    <td>\n                        {/* A */}\n                        <input type=\"checkbox\"\n                               checked={row.A}\n                               onChange={(e)=>{this.handleCheckA(row.id)}}/>\n                            \n                     </td>\n                     <td>\n                        {/* B */}\n                        <input type=\"checkbox\"\n                               checked={row.B}\n                               onChange={(e)=>{this.handleCheckB(row.id)}}/>\n\n                     </td>\n                     <td>\n                        {/* C */}\n                        <input type=\"checkbox\"\n                               checked={row.C}\n                               onChange={(e)=>{this.handleCheckC(row.id)}}/>\n\n                     </td>\n                     <td>\n                        {/* D */}\n                        <input type=\"checkbox\"\n                               checked={row.D}\n                               onChange={(e)=>{this.handleCheckD(row.id)}}/>\n\n                     </td>\n                </tr>\n            )\n        })\n        \n        return(\n            <div>\n                <h3>Fill Answers</h3>\n                <button className={this.state.started?\"hideen\":\"btn btn-primary\"} onClick={this.start}>Start</button>\n                <button className={this.state.started?\"btn btn-primary\":\"hideen\"} onClick={this.submit}>Submin</button>\n\n                <table className=\"table table-hover table-striped\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">A</th>\n                    <th scope=\"col\">B</th>\n                    <th scope=\"col\">C</th>\n                    <th scope=\"col\">D</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport ExamStore from '../../Stores/ExamStore';\nimport ExamActions from '../../Actions/ExamActions';\nimport StudentResult from './StudentResult';\nimport OmrSheet from './OmrSheet';\nimport StudentActions from '../../Actions/StudentActions';\n\n\n\n\nexport default class StudentExam extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name:\"\",\n            date:\"\",\n            answerkey:\"\",\n            createdBy:\"\",\n            students:[],\n            numberOfQuestion:0,\n            \n        }\n        this.onExamReceived= this.onExamReceived.bind(this);\n        this.onAnswerKeyUpdated = this.onAnswerKeyUpdated.bind(this);\n\n        this.handleAnswerChange = this.handleAnswerChange.bind(this);\n        this.handleAnswerKeyChange = this.handleAnswerKeyChange.bind(this);\n\n        this.handleAnswerSubmit = this.handleAnswerSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        ExamStore.addExamChangeListner(this.onExamReceived);\n        ExamStore.addExamUpdateListener(this.onAnswerKeyUpdated);\n        ExamActions.getStudentExam(this.props.match.params.examid);\n    }\n    componentWillUnmount(){\n        ExamStore.removeExamChangeListner(this.onExamReceived);\n        ExamStore.removeExamUpdatedListner(this.onAnswerKeyUpdated);\n\n    }\n\n    onExamReceived(){\n        let e = ExamStore.getExam();\n        this.setState({\n            name:e.exam_name,\n            date:e.date,\n            answerkey:e.answerkey,\n            createdBy:e.firstname+\" \"+e.lastname,\n            students:e.Student,\n            numberOfQuestion:e.numberOfQuestion,\n        })\n    \n    }\n    \n    onAnswerKeyUpdated(){\n        ExamActions.getExam(this.props.match.params.examid);\n    }\n\n    handleAnswerKeyChange(e){\n        e.preventDefault();\n        ExamActions.updateAnswerKey(this.props.match.params.examid,this.state.answerkey);\n    }\n\n    handleAnswerChange(e){\n        e.preventDefault();\n       \n    }\n\n\n    marks(studentanswers){\n        let answerkey = this.state.answerkey.split(\",\");\n        studentanswers = studentanswers.split(\",\");\n        var i,mark=0;\n        for (i = 0; i < answerkey.length; i++) { \n            if(studentanswers[i]===answerkey[i]){\n                mark+=1;\n            }\n        }\n        return mark;\n    }\n\n    handleAnswerSubmit(ans){\n        console.log(ans);\n        StudentActions.submitExamAnswers(this.props.match.params.examid,ans.toLowerCase());\n    }\n\n    render(){\n        let x = 0;\n        let students = this.state.students.map(s => {\n            x = x+1;\n            return (\n                <tr>\n                    <th scope=\"row\">{x}</th>\n                    <td>{s.StudentFirstName+\" \"+s.StudentLastName}</td>\n                    <td>{s.answerkey}</td>\n                    <td>{this.marks(s.answerkey)}</td>\n                </tr>\n            )\n        })\n        \n        return(\n            <div className=\"row\">\n                <div id=\"exam-detais\" className=\"col col-md-4 border-right\">\n                    <h3>Exam Details</h3>\n                    <p><b>Name:</b>{this.state.name}</p>\n                    <p><b>Date:</b>{this.state.date}</p>\n                    <p><b>Created By:</b>{this.state.createdBy}</p>\n                    <p><b>Number Of Questions:</b>{this.state.numberOfQuestion}</p>\n                    \n                    <p><b>AnswerKey:</b>\n                        {this.state.answerkey}\n                    </p>\n\n                </div>\n                <div id=\"exam-results border-right\" className=\"col col-md-8\">\n                    <div className={this.state.answerkey==null  ? 'hideen' : ''}>\n                        <StudentResult students={students}/>\n                    </div>\n                    <div className={this.state.answerkey!==null  ? 'hideen' : ''}>\n                        <OmrSheet numberOfQuestion={this.state.numberOfQuestion} onSubmit={this.handleAnswerSubmit}></OmrSheet>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport AuthActions from '../../Actions/AuthActions';\nimport AuthStore from '../../Stores/AuthStore';\nimport Navbar from '../Template/Navbar';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport StudentClasses from './StudentClasses';\nimport StudentClass from './StudentClass';\nimport StudentExam from './StudentExam';\n\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass StudentHome extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n           user: {\n               firstName: \"\",\n               lastName: \"\",\n               idUser: -1,\n           },\n        }\n        this._onProfileChanged = this._onProfileChanged.bind(this);\n        this.signout = this.signout.bind(this);\n    }\n\n    componentWillMount(){\n        if(!localStorage.getItem(\"userid\")){\n            this.props.history.replace(\"./signin\");            \n        }\n        else{\n            AuthStore.addProfileChangeListener(this._onProfileChanged);\n            // console.log(AuthStore._getUserid().userid);\n            AuthActions.getUser(AuthStore._getUserid());\n        }\n    }\n\n    componentWillUnmount(){\n        AuthStore.removeProfileChangeListener(this._onProfileChanged);\n    }\n    \n    _onProfileChanged(){\n        var _user = AuthStore._getUser();\n        this.setState({\n            user: _user,\n        })\n    }\n\n    signout(){\n        localStorage.clear();\n        window.location.href = \"/\";\n\n    }\n\n    render(){\n        var styles1 = {\n           \n            // border: 'solid 1px',\n            borderColor: '#999',\n            borderRadius:'5px',\n            padding: '20px',\n          };\n\n        var styleContainer = {\n            paddingTop:'50px',\n        }\n\n        var tab = {\n            width: \"100%\",\n            paddingTop:\"140px\",\n            paddingBottom:\"140px\",\n            borderRadius: \"20px;\",\n            fontSize: '30px',\n        }\n        return(\n            <div>\n                <Navbar name={this.state.user.firstName+\" \"+this.state.user.lastName}\n                        onSignOut={this.signout}\n                        page={\"Student home\"}/>\n                <div className=\"container\" style={styleContainer}>\n                <Router>\n                    {/* <Route exact path=\"/admin/user/\" component={User}/>\n                    <Route exact path=\"/admin/course/\" component={Courses} userid={this.state.user.idUser}/>\n                    <Route exact path=\"/admin/class/:id\" component={ClassDetails} />\n                    <Route exact path=\"/admin/class/\" component={Classes} />\n                    */}\n                    <Route exact path=\"/student/class/:id\" component={StudentClass}/>\n                    <Route exact path=\"/student/class\" component={StudentClasses}/>\n                    <Route exact path=\"/student/exam/:examid\" component={StudentExam}/>\n                    <Route exact path=\"/student/\" component={StudentClasses}/>  \n                </Router>        \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default StudentHome;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Signin from './Components/Auth/Signin';\nimport Signup from './Components/Auth/Signup';\nimport Home from './Components/Home';\nimport AdminHome from './Components/AdminHome';\nimport InstructorHome from './Components/Instructor/InstructorHome';\nimport StudentHome from './Components/Student/StudentHome';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Route exact path=\"/signin/\" component={Signin} />\n          <Route exact path=\"/signup/\" component={Signup} />\n          <Route path=\"/admin/\" component={AdminHome} />\n          <Route path=\"/instructor/\" component={InstructorHome}/>\n          <Route path=\"/student/\" component={StudentHome}/>\n          <Route exact path=\"/\" component={Home}/>\n        </Router>\n        {/* <Route path=\"/\" exact component={Index} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}